{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"fizbuzz.py","provenance":[],"authorship_tag":"ABX9TyOEOrzdL0htrO6DUPcmOKEa"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BlGqqgMSEyfc","executionInfo":{"status":"ok","timestamp":1611805610316,"user_tz":360,"elapsed":415539,"user":{"displayName":"Michael Pettinger","photoUrl":"","userId":"01561612083490084380"}},"outputId":"01dcb33f-4885-4fec-9a7f-50c34ab9d0a7"},"source":["help()"],"execution_count":24,"outputs":[{"output_type":"stream","text":["\n","Welcome to Python 3.6's help utility!\n","\n","If this is your first time using Python, you should definitely check out\n","the tutorial on the Internet at https://docs.python.org/3.6/tutorial/.\n","\n","Enter the name of any module, keyword, or topic to get help on writing\n","Python programs and using Python modules.  To quit this help utility and\n","return to the interpreter, just type \"quit\".\n","\n","To get a list of available modules, keywords, symbols, or topics, type\n","\"modules\", \"keywords\", \"symbols\", or \"topics\".  Each module also comes\n","with a one-line summary of what it does; to list the modules whose name\n","or summary contain a given string such as \"spam\", type \"modules spam\".\n","\n","help> modules\n","\n","Please wait a moment while I gather a list of all available modules...\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/IPython/kernel/__init__.py:13: ShimWarning: The `IPython.kernel` package has been deprecated since IPython 4.0.You should import from ipykernel or jupyter_client instead.\n","  \"You should import from ipykernel or jupyter_client instead.\", ShimWarning)\n","/usr/local/lib/python3.6/dist-packages/datascience/tables.py:17: MatplotlibDeprecationWarning:\n","\n","The 'warn' parameter of use() is deprecated since Matplotlib 3.1 and will be removed in 3.3.  If any parameter follows 'warn', they should be pass as keyword, not positionally.\n","\n","/usr/local/lib/python3.6/dist-packages/datascience/util.py:10: MatplotlibDeprecationWarning:\n","\n","The 'warn' parameter of use() is deprecated since Matplotlib 3.1 and will be removed in 3.3.  If any parameter follows 'warn', they should be pass as keyword, not positionally.\n","\n","/usr/local/lib/python3.6/dist-packages/psycopg2/__init__.py:144: UserWarning:\n","\n","The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use \"pip install psycopg2-binary\" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/externals/six.py:31: FutureWarning:\n","\n","The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.neighbors.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.datasets.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.datasets. Anything that cannot be imported from sklearn.datasets is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.ensemble.bagging module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.ensemble. Anything that cannot be imported from sklearn.ensemble is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.ensemble.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.ensemble. Anything that cannot be imported from sklearn.ensemble is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.ensemble.forest module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.ensemble. Anything that cannot be imported from sklearn.ensemble is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/__init__.py:15: FutureWarning:\n","\n","sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.utils.testing module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.utils. Anything that cannot be imported from sklearn.utils is now part of the private API.\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n","\n","The sklearn.metrics.classification module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.metrics. Anything that cannot be imported from sklearn.metrics is now part of the private API.\n","\n"],"name":"stderr"},{"output_type":"stream","text":["Downloading http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2 to /root/mlxtend_data/shape_predictor_68_face_landmarks.dat.bz2\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/lib/python3.6/pkgutil.py:92: UserWarning:\n","\n","The DICOM readers are highly experimental, unstable, and only work for Siemens time-series at the moment\n","Please use with caution.  We would be grateful for your help in improving them\n","\n","/usr/local/lib/python3.6/dist-packages/nltk/twitter/__init__.py:20: UserWarning:\n","\n","The twython library has not been installed. Some functionality from the twitter package will not be available.\n","\n","Exception ignored in: <_io.FileIO name='/usr/local/lib/python3.6/dist-packages/theano/gof/c_code/lazylinker_c.c' mode='rb' closefd=True>\n","ResourceWarning: unclosed file <_io.TextIOWrapper name='/usr/local/lib/python3.6/dist-packages/theano/gof/c_code/lazylinker_c.c' mode='r' encoding='UTF-8'>\n","WARNING:pystan:This submodule contains experimental code, please use with caution\n"],"name":"stderr"},{"output_type":"stream","text":["Cython              compileall          kiwisolver          re\n","IPython             concurrent          knnimpute           readline\n","OpenGL              configparser        korean_lunar_calendar regex\n","PIL                 contextlib          lib2to3             reprlib\n","ScreenResolution    contextlib2         libfuturize         requests\n","__future__          convertdate         libpasteurize       requests_oauthlib\n","_ast                copy                librosa             resampy\n","_asyncio            copyreg             lightgbm            resource\n","_bisect             coverage            linecache           retrying\n","_blake2             coveralls           llvmlite            rlcompleter\n","_bootlocale         crcmod              lmdb                rmagic\n","_bz2                crypt               locale              rpy2\n","_cffi_backend       csv                 logging             rsa\n","_codecs             ctypes              lsb_release         runpy\n","_codecs_cn          cufflinks           lucid               samples\n","_codecs_hk          curses              lunarcalendar       sched\n","_codecs_iso2022     cv2                 lxml                scipy\n","_codecs_jp          cvxopt              lzma                scs\n","_codecs_kr          cvxpy               macpath             seaborn\n","_codecs_tw          cycler              macurl2path         secrets\n","_collections        cymem               mailbox             select\n","_collections_abc    cython              mailcap             selectors\n","_compat_pickle      cythonmagic         markdown            send2trash\n","_compression        daft                markupsafe          setuptools\n","_crypt              dask                marshal             setuptools_git\n","_csv                dataclasses         math                shapely\n","_ctypes             datascience         matplotlib          shelve\n","_ctypes_test        datetime            matplotlib_venn     shlex\n","_curses             dateutil            mimetypes           shutil\n","_curses_panel       dbm                 missingno           signal\n","_cvxcore            dbus                mistune             simplegeneric\n","_datetime           debugpy             mizani              site\n","_dbm                decimal             mlxtend             sitecustomize\n","_dbus_bindings      decorator           mmap                six\n","_dbus_glib_bindings defusedxml          modulefinder        skimage\n","_decimal            descartes           more_itertools      sklearn\n","_distutils_hack     difflib             moviepy             sklearn_pandas\n","_dummy_thread       dill                mpmath              slugify\n","_ecos               dis                 msgpack             smart_open\n","_elementtree        distributed         multiprocess        smtpd\n","_foo                distutils           multiprocessing     smtplib\n","_functools          django              multitasking        sndhdr\n","_hashlib            dlib                murmurhash          snowballstemmer\n","_heapq              docopt              music21             socket\n","_imp                docs                natsort             socketserver\n","_io                 doctest             nbclient            socks\n","_json               docutils            nbconvert           sockshandler\n","_locale             dopamine            nbformat            softwareproperties\n","_lsprof             dot_parser          nest_asyncio        sortedcontainers\n","_lzma               dummy_threading     netrc               soundfile\n","_markupbase         easy_install        networkx            spacy\n","_md5                easydict            nibabel             sphinx\n","_multibytecodec     ecos                nis                 spwd\n","_multiprocess       editdistance        nisext              sql\n","_multiprocessing    ee                  nltk                sqlalchemy\n","_opcode             email               nntplib             sqlite3\n","_operator           en_core_web_sm      notebook            sqlparse\n","_osx_support        encodings           np_utils            sre_compile\n","_pickle             entrypoints         ntpath              sre_constants\n","_plotly_future_     enum                nturl2path          sre_parse\n","_plotly_utils       ephem               numba               srsly\n","_posixsubprocess    errno               numbergen           ssl\n","_pydecimal          et_xmlfile          numbers             stat\n","_pyio               examples            numexpr             statistics\n","_pyrsistent_version fa2                 numpy               statsmodels\n","_pytest             fancyimpute         nvidia_smi          storemagic\n","_random             fastai              oauth2client        string\n","_rinterface_cffi_abi fastdtw             oauthlib            stringprep\n","_rinterface_cffi_api fastprogress        ogr                 struct\n","_scs_direct         fastrlock           okgrade             subprocess\n","_scs_indirect       faulthandler        onnx_chainer        sunau\n","_scs_python         fbprophet           opcode              symbol\n","_sha1               fcntl               openpyxl            sympy\n","_sha256             feather             operator            sympyprinting\n","_sha3               filecmp             opt_einsum          symtable\n","_sha512             fileinput           optparse            sys\n","_signal             filelock            os                  sysconfig\n","_sitebuiltins       firebase_admin      osgeo               syslog\n","_socket             fix_yahoo_finance   osqp                tables\n","_soundfile          flask               osqppurepy          tabnanny\n","_sqlite3            flatbuffers         osr                 tabulate\n","_sre                fnmatch             ossaudiodev         tarfile\n","_ssl                folium              packaging           tblib\n","_stat               formatter           palettable          telnetlib\n","_string             fractions           pandas              tempfile\n","_strptime           ftplib              pandas_datareader   tensorboard\n","_struct             functools           pandas_gbq          tensorboard_plugin_wit\n","_symtable           future              pandas_profiling    tensorboardcolab\n","_sysconfigdata_m_linux_x86_64-linux-gnu gast                pandocfilters       tensorflow\n","_testbuffer         gc                  panel               tensorflow_addons\n","_testcapi           gdal                param               tensorflow_datasets\n","_testimportmultiple gdalconst           parser              tensorflow_estimator\n","_testmultiphase     gdalnumeric         parso               tensorflow_gcs_config\n","_thread             gdown               past                tensorflow_hub\n","_threading_local    genericpath         pasta               tensorflow_metadata\n","_tkinter            gensim              pathlib             tensorflow_privacy\n","_tracemalloc        geographiclib       patsy               tensorflow_probability\n","_warnings           geopy               pdb                 termcolor\n","_weakref            getopt              pexpect             terminado\n","_weakrefset         getpass             pickle              termios\n","abc                 gettext             pickleshare         test\n","absl                gi                  pickletools         testpath\n","aifc                gin                 pip                 tests\n","alabaster           github2pypi         pipes               text_unidecode\n","albumentations      glob                piptools            textblob\n","altair              glob2               pkg_resources       textgenrnn\n","antigravity         gnm                 pkgutil             textwrap\n","apiclient           google_auth_httplib2 plac                theano\n","appdirs             google_auth_oauthlib plac_core           thinc\n","apt                 google_drive_downloader plac_ext            this\n","apt_inst            googleapiclient     plac_tk             threading\n","apt_pkg             googlesearch        platform            tifffile\n","aptsources          graphviz            plistlib            time\n","argon2              gridfs              plotly              timeit\n","argparse            grp                 plotlywidget        tkinter\n","array               grpc                plotnine            tlz\n","asgiref             gspread             pluggy              token\n","ast                 gspread_dataframe   pooch               tokenize\n","astor               gym                 poplib              toml\n","astropy             gzip                portpicker          toolz\n","astunparse          h5py                posix               torch\n","async_generator     hashlib             posixpath           torchsummary\n","asynchat            heapdict            pprint              torchtext\n","asyncio             heapq               prefetch_generator  torchvision\n","asyncore            hmac                preshed             tornado\n","atari_py            holidays            prettytable         tqdm\n","atexit              holoviews           profile             trace\n","atomicwrites        html                progressbar         traceback\n","attr                html5lib            prometheus_client   tracemalloc\n","audioop             http                promise             traitlets\n","audioread           httpimport          prompt_toolkit      tree\n","autograd            httplib2            pstats              tty\n","autoreload          httplib2shim        psutil              turtle\n","babel               humanize            psycopg2            tweepy\n","backcall            hyperopt            pty                 typeguard\n","base64              ideep4py            ptyprocess          types\n","bdb                 idna                pvectorc            typing\n","bin                 image               pwd                 typing_extensions\n","binascii            imageio             py                  tzlocal\n","binhex              imagesize           py_compile          umap\n","bisect              imaplib             pyarrow             unicodedata\n","bleach              imblearn            pyasn1              unittest\n","blis                imgaug              pyasn1_modules      uritemplate\n","bokeh               imghdr              pyclbr              urllib\n","boost               imp                 pycocotools         urllib3\n","bottleneck          importlib           pycparser           uu\n","branca              importlib_metadata  pyct                uuid\n","bs4                 importlib_resources pydata_google_auth  vega_datasets\n","bson                imutils             pydoc               venv\n","builtins            inflect             pydoc_data          vis\n","bz2                 iniconfig           pydot               warnings\n","cProfile            inspect             pydot_ng            wasabi\n","cachecontrol        intervaltree        pydotplus           wave\n","cachetools          io                  pydrive             wcwidth\n","caffe2              ipaddress           pyemd               weakref\n","calendar            ipykernel           pyexpat             webbrowser\n","catalogue           ipykernel_launcher  pyglet              webencodings\n","certifi             ipython_genutils    pygments            werkzeug\n","cffi                ipywidgets          pygtkcompat         wheel\n","cgi                 itertools           pylab               widgetsnbextension\n","cgitb               itsdangerous        pymc3               wordcloud\n","chainer             jax                 pymeeus             wrapt\n","chainermn           jaxlib              pymongo             wsgiref\n","chainerx            jdcal               pymystem3           xarray\n","chardet             jedi                pynndescent         xdrlib\n","chess               jieba               pynvml              xgboost\n","chunk               jinja2              pyparsing           xkit\n","click               joblib              pyrsistent          xlrd\n","client              jpeg4py             pysndfile           xlwt\n","cloudpickle         json                pystan              xml\n","cmake               jsonschema          pytest              xmlrpc\n","cmath               jupyter             python_utils        xxlimited\n","cmd                 jupyter_client      pytz                xxsubtype\n","cmdstanpy           jupyter_console     pyviz_comms         yaml\n","code                jupyter_core        pywt                yellowbrick\n","codecs              jupyterlab_pygments pyximport           zict\n","codeop              jupyterlab_widgets  qdldl               zipapp\n","colab               kaggle              qtconsole           zipfile\n","collections         kapre               qtpy                zipimport\n","colorlover          keras               queue               zipp\n","colorsys            keras_preprocessing quopri              zlib\n","community           keyword             random              zmq\n","\n","Enter any module name to get more help.  Or, type \"modules spam\" to search\n","for modules whose name or summary contain the string \"spam\".\n","\n","help> random\n","Help on module random:\n","\n","NAME\n","    random - Random variable generators.\n","\n","MODULE REFERENCE\n","    https://docs.python.org/3.6/library/random\n","    \n","    The following documentation is automatically generated from the Python\n","    source files.  It may be incomplete, incorrect or include features that\n","    are considered implementation detail and may vary between Python\n","    implementations.  When in doubt, consult the module reference at the\n","    location listed above.\n","\n","DESCRIPTION\n","        integers\n","        --------\n","               uniform within range\n","    \n","        sequences\n","        ---------\n","               pick random element\n","               pick random sample\n","               pick weighted random sample\n","               generate random permutation\n","    \n","        distributions on the real line:\n","        ------------------------------\n","               uniform\n","               triangular\n","               normal (Gaussian)\n","               lognormal\n","               negative exponential\n","               gamma\n","               beta\n","               pareto\n","               Weibull\n","    \n","        distributions on the circle (angles 0 to 2pi)\n","        ---------------------------------------------\n","               circular uniform\n","               von Mises\n","    \n","    General notes on the underlying Mersenne Twister core generator:\n","    \n","    * The period is 2**19937-1.\n","    * It is one of the most extensively tested generators in existence.\n","    * The random() method is implemented in C, executes in a single Python step,\n","      and is, therefore, threadsafe.\n","\n","CLASSES\n","    _random.Random(builtins.object)\n","        Random\n","            SystemRandom\n","    \n","    class Random(_random.Random)\n","     |  Random number generator base class used by bound module functions.\n","     |  \n","     |  Used to instantiate instances of Random to get generators that don't\n","     |  share state.\n","     |  \n","     |  Class Random can also be subclassed if you want to use a different basic\n","     |  generator of your own devising: in that case, override the following\n","     |  methods:  random(), seed(), getstate(), and setstate().\n","     |  Optionally, implement a getrandbits() method so that randrange()\n","     |  can cover arbitrarily large ranges.\n","     |  \n","     |  Method resolution order:\n","     |      Random\n","     |      _random.Random\n","     |      builtins.object\n","     |  \n","     |  Methods defined here:\n","     |  \n","     |  __getstate__(self)\n","     |      # Issue 17489: Since __reduce__ was defined to fix #759889 this is no\n","     |      # longer called; we leave it here because it has been here since random was\n","     |      # rewritten back in 2001 and why risk breaking something.\n","     |  \n","     |  __init__(self, x=None)\n","     |      Initialize an instance.\n","     |      \n","     |      Optional argument x controls seeding, as for Random.seed().\n","     |  \n","     |  __reduce__(self)\n","     |      helper for pickle\n","     |  \n","     |  __setstate__(self, state)\n","     |  \n","     |  betavariate(self, alpha, beta)\n","     |      Beta distribution.\n","     |      \n","     |      Conditions on the parameters are alpha > 0 and beta > 0.\n","     |      Returned values range between 0 and 1.\n","     |  \n","     |  choice(self, seq)\n","     |      Choose a random element from a non-empty sequence.\n","     |  \n","     |  choices(self, population, weights=None, *, cum_weights=None, k=1)\n","     |      Return a k sized list of population elements chosen with replacement.\n","     |      \n","     |      If the relative weights or cumulative weights are not specified,\n","     |      the selections are made with equal probability.\n","     |  \n","     |  expovariate(self, lambd)\n","     |      Exponential distribution.\n","     |      \n","     |      lambd is 1.0 divided by the desired mean.  It should be\n","     |      nonzero.  (The parameter would be called \"lambda\", but that is\n","     |      a reserved word in Python.)  Returned values range from 0 to\n","     |      positive infinity if lambd is positive, and from negative\n","     |      infinity to 0 if lambd is negative.\n","     |  \n","     |  gammavariate(self, alpha, beta)\n","     |      Gamma distribution.  Not the gamma function!\n","     |      \n","     |      Conditions on the parameters are alpha > 0 and beta > 0.\n","     |      \n","     |      The probability distribution function is:\n","     |      \n","     |                  x ** (alpha - 1) * math.exp(-x / beta)\n","     |        pdf(x) =  --------------------------------------\n","     |                    math.gamma(alpha) * beta ** alpha\n","     |  \n","     |  gauss(self, mu, sigma)\n","     |      Gaussian distribution.\n","     |      \n","     |      mu is the mean, and sigma is the standard deviation.  This is\n","     |      slightly faster than the normalvariate() function.\n","     |      \n","     |      Not thread-safe without a lock around calls.\n","     |  \n","     |  getstate(self)\n","     |      Return internal state; can be passed to setstate() later.\n","     |  \n","     |  lognormvariate(self, mu, sigma)\n","     |      Log normal distribution.\n","     |      \n","     |      If you take the natural logarithm of this distribution, you'll get a\n","     |      normal distribution with mean mu and standard deviation sigma.\n","     |      mu can have any value, and sigma must be greater than zero.\n","     |  \n","     |  normalvariate(self, mu, sigma)\n","     |      Normal distribution.\n","     |      \n","     |      mu is the mean, and sigma is the standard deviation.\n","     |  \n","     |  paretovariate(self, alpha)\n","     |      Pareto distribution.  alpha is the shape parameter.\n","     |  \n","     |  randint(self, a, b)\n","     |      Return random integer in range [a, b], including both end points.\n","     |  \n","     |  randrange(self, start, stop=None, step=1, _int=<class 'int'>)\n","     |      Choose a random item from range(start, stop[, step]).\n","     |      \n","     |      This fixes the problem with randint() which includes the\n","     |      endpoint; in Python this is usually not what you want.\n","     |  \n","     |  sample(self, population, k)\n","     |      Chooses k unique random elements from a population sequence or set.\n","     |      \n","     |      Returns a new list containing elements from the population while\n","     |      leaving the original population unchanged.  The resulting list is\n","     |      in selection order so that all sub-slices will also be valid random\n","     |      samples.  This allows raffle winners (the sample) to be partitioned\n","     |      into grand prize and second place winners (the subslices).\n","     |      \n","     |      Members of the population need not be hashable or unique.  If the\n","     |      population contains repeats, then each occurrence is a possible\n","     |      selection in the sample.\n","     |      \n","     |      To choose a sample in a range of integers, use range as an argument.\n","     |      This is especially fast and space efficient for sampling from a\n","     |      large population:   sample(range(10000000), 60)\n","     |  \n","     |  seed(self, a=None, version=2)\n","     |      Initialize internal state from hashable object.\n","     |      \n","     |      None or no argument seeds from current time or from an operating\n","     |      system specific randomness source if available.\n","     |      \n","     |      If *a* is an int, all bits are used.\n","     |      \n","     |      For version 2 (the default), all of the bits are used if *a* is a str,\n","     |      bytes, or bytearray.  For version 1 (provided for reproducing random\n","     |      sequences from older versions of Python), the algorithm for str and\n","     |      bytes generates a narrower range of seeds.\n","     |  \n","     |  setstate(self, state)\n","     |      Restore internal state from object returned by getstate().\n","     |  \n","     |  shuffle(self, x, random=None)\n","     |      Shuffle list x in place, and return None.\n","     |      \n","     |      Optional argument random is a 0-argument function returning a\n","     |      random float in [0.0, 1.0); if it is the default None, the\n","     |      standard random.random will be used.\n","     |  \n","     |  triangular(self, low=0.0, high=1.0, mode=None)\n","     |      Triangular distribution.\n","     |      \n","     |      Continuous distribution bounded by given lower and upper limits,\n","     |      and having a given mode value in-between.\n","     |      \n","     |      http://en.wikipedia.org/wiki/Triangular_distribution\n","     |  \n","     |  uniform(self, a, b)\n","     |      Get a random number in the range [a, b) or [a, b] depending on rounding.\n","     |  \n","     |  vonmisesvariate(self, mu, kappa)\n","     |      Circular data distribution.\n","     |      \n","     |      mu is the mean angle, expressed in radians between 0 and 2*pi, and\n","     |      kappa is the concentration parameter, which must be greater than or\n","     |      equal to zero.  If kappa is equal to zero, this distribution reduces\n","     |      to a uniform random angle over the range 0 to 2*pi.\n","     |  \n","     |  weibullvariate(self, alpha, beta)\n","     |      Weibull distribution.\n","     |      \n","     |      alpha is the scale parameter and beta is the shape parameter.\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Data descriptors defined here:\n","     |  \n","     |  __dict__\n","     |      dictionary for instance variables (if defined)\n","     |  \n","     |  __weakref__\n","     |      list of weak references to the object (if defined)\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Data and other attributes defined here:\n","     |  \n","     |  VERSION = 3\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Methods inherited from _random.Random:\n","     |  \n","     |  __getattribute__(self, name, /)\n","     |      Return getattr(self, name).\n","     |  \n","     |  __new__(*args, **kwargs) from builtins.type\n","     |      Create and return a new object.  See help(type) for accurate signature.\n","     |  \n","     |  getrandbits(...)\n","     |      getrandbits(k) -> x.  Generates an int with k random bits.\n","     |  \n","     |  random(...)\n","     |      random() -> x in the interval [0, 1).\n","    \n","    class SystemRandom(Random)\n","     |  Alternate random number generator using sources provided\n","     |  by the operating system (such as /dev/urandom on Unix or\n","     |  CryptGenRandom on Windows).\n","     |  \n","     |   Not available on all systems (see os.urandom() for details).\n","     |  \n","     |  Method resolution order:\n","     |      SystemRandom\n","     |      Random\n","     |      _random.Random\n","     |      builtins.object\n","     |  \n","     |  Methods defined here:\n","     |  \n","     |  getrandbits(self, k)\n","     |      getrandbits(k) -> x.  Generates an int with k random bits.\n","     |  \n","     |  getstate = _notimplemented(self, *args, **kwds)\n","     |  \n","     |  random(self)\n","     |      Get the next random number in the range [0.0, 1.0).\n","     |  \n","     |  seed(self, *args, **kwds)\n","     |      Stub method.  Not used for a system random number generator.\n","     |  \n","     |  setstate = _notimplemented(self, *args, **kwds)\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Methods inherited from Random:\n","     |  \n","     |  __getstate__(self)\n","     |      # Issue 17489: Since __reduce__ was defined to fix #759889 this is no\n","     |      # longer called; we leave it here because it has been here since random was\n","     |      # rewritten back in 2001 and why risk breaking something.\n","     |  \n","     |  __init__(self, x=None)\n","     |      Initialize an instance.\n","     |      \n","     |      Optional argument x controls seeding, as for Random.seed().\n","     |  \n","     |  __reduce__(self)\n","     |      helper for pickle\n","     |  \n","     |  __setstate__(self, state)\n","     |  \n","     |  betavariate(self, alpha, beta)\n","     |      Beta distribution.\n","     |      \n","     |      Conditions on the parameters are alpha > 0 and beta > 0.\n","     |      Returned values range between 0 and 1.\n","     |  \n","     |  choice(self, seq)\n","     |      Choose a random element from a non-empty sequence.\n","     |  \n","     |  choices(self, population, weights=None, *, cum_weights=None, k=1)\n","     |      Return a k sized list of population elements chosen with replacement.\n","     |      \n","     |      If the relative weights or cumulative weights are not specified,\n","     |      the selections are made with equal probability.\n","     |  \n","     |  expovariate(self, lambd)\n","     |      Exponential distribution.\n","     |      \n","     |      lambd is 1.0 divided by the desired mean.  It should be\n","     |      nonzero.  (The parameter would be called \"lambda\", but that is\n","     |      a reserved word in Python.)  Returned values range from 0 to\n","     |      positive infinity if lambd is positive, and from negative\n","     |      infinity to 0 if lambd is negative.\n","     |  \n","     |  gammavariate(self, alpha, beta)\n","     |      Gamma distribution.  Not the gamma function!\n","     |      \n","     |      Conditions on the parameters are alpha > 0 and beta > 0.\n","     |      \n","     |      The probability distribution function is:\n","     |      \n","     |                  x ** (alpha - 1) * math.exp(-x / beta)\n","     |        pdf(x) =  --------------------------------------\n","     |                    math.gamma(alpha) * beta ** alpha\n","     |  \n","     |  gauss(self, mu, sigma)\n","     |      Gaussian distribution.\n","     |      \n","     |      mu is the mean, and sigma is the standard deviation.  This is\n","     |      slightly faster than the normalvariate() function.\n","     |      \n","     |      Not thread-safe without a lock around calls.\n","     |  \n","     |  lognormvariate(self, mu, sigma)\n","     |      Log normal distribution.\n","     |      \n","     |      If you take the natural logarithm of this distribution, you'll get a\n","     |      normal distribution with mean mu and standard deviation sigma.\n","     |      mu can have any value, and sigma must be greater than zero.\n","     |  \n","     |  normalvariate(self, mu, sigma)\n","     |      Normal distribution.\n","     |      \n","     |      mu is the mean, and sigma is the standard deviation.\n","     |  \n","     |  paretovariate(self, alpha)\n","     |      Pareto distribution.  alpha is the shape parameter.\n","     |  \n","     |  randint(self, a, b)\n","     |      Return random integer in range [a, b], including both end points.\n","     |  \n","     |  randrange(self, start, stop=None, step=1, _int=<class 'int'>)\n","     |      Choose a random item from range(start, stop[, step]).\n","     |      \n","     |      This fixes the problem with randint() which includes the\n","     |      endpoint; in Python this is usually not what you want.\n","     |  \n","     |  sample(self, population, k)\n","     |      Chooses k unique random elements from a population sequence or set.\n","     |      \n","     |      Returns a new list containing elements from the population while\n","     |      leaving the original population unchanged.  The resulting list is\n","     |      in selection order so that all sub-slices will also be valid random\n","     |      samples.  This allows raffle winners (the sample) to be partitioned\n","     |      into grand prize and second place winners (the subslices).\n","     |      \n","     |      Members of the population need not be hashable or unique.  If the\n","     |      population contains repeats, then each occurrence is a possible\n","     |      selection in the sample.\n","     |      \n","     |      To choose a sample in a range of integers, use range as an argument.\n","     |      This is especially fast and space efficient for sampling from a\n","     |      large population:   sample(range(10000000), 60)\n","     |  \n","     |  shuffle(self, x, random=None)\n","     |      Shuffle list x in place, and return None.\n","     |      \n","     |      Optional argument random is a 0-argument function returning a\n","     |      random float in [0.0, 1.0); if it is the default None, the\n","     |      standard random.random will be used.\n","     |  \n","     |  triangular(self, low=0.0, high=1.0, mode=None)\n","     |      Triangular distribution.\n","     |      \n","     |      Continuous distribution bounded by given lower and upper limits,\n","     |      and having a given mode value in-between.\n","     |      \n","     |      http://en.wikipedia.org/wiki/Triangular_distribution\n","     |  \n","     |  uniform(self, a, b)\n","     |      Get a random number in the range [a, b) or [a, b] depending on rounding.\n","     |  \n","     |  vonmisesvariate(self, mu, kappa)\n","     |      Circular data distribution.\n","     |      \n","     |      mu is the mean angle, expressed in radians between 0 and 2*pi, and\n","     |      kappa is the concentration parameter, which must be greater than or\n","     |      equal to zero.  If kappa is equal to zero, this distribution reduces\n","     |      to a uniform random angle over the range 0 to 2*pi.\n","     |  \n","     |  weibullvariate(self, alpha, beta)\n","     |      Weibull distribution.\n","     |      \n","     |      alpha is the scale parameter and beta is the shape parameter.\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Data descriptors inherited from Random:\n","     |  \n","     |  __dict__\n","     |      dictionary for instance variables (if defined)\n","     |  \n","     |  __weakref__\n","     |      list of weak references to the object (if defined)\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Data and other attributes inherited from Random:\n","     |  \n","     |  VERSION = 3\n","     |  \n","     |  ----------------------------------------------------------------------\n","     |  Methods inherited from _random.Random:\n","     |  \n","     |  __getattribute__(self, name, /)\n","     |      Return getattr(self, name).\n","     |  \n","     |  __new__(*args, **kwargs) from builtins.type\n","     |      Create and return a new object.  See help(type) for accurate signature.\n","\n","FUNCTIONS\n","    betavariate(alpha, beta) method of Random instance\n","        Beta distribution.\n","        \n","        Conditions on the parameters are alpha > 0 and beta > 0.\n","        Returned values range between 0 and 1.\n","    \n","    choice(seq) method of Random instance\n","        Choose a random element from a non-empty sequence.\n","    \n","    choices(population, weights=None, *, cum_weights=None, k=1) method of Random instance\n","        Return a k sized list of population elements chosen with replacement.\n","        \n","        If the relative weights or cumulative weights are not specified,\n","        the selections are made with equal probability.\n","    \n","    expovariate(lambd) method of Random instance\n","        Exponential distribution.\n","        \n","        lambd is 1.0 divided by the desired mean.  It should be\n","        nonzero.  (The parameter would be called \"lambda\", but that is\n","        a reserved word in Python.)  Returned values range from 0 to\n","        positive infinity if lambd is positive, and from negative\n","        infinity to 0 if lambd is negative.\n","    \n","    gammavariate(alpha, beta) method of Random instance\n","        Gamma distribution.  Not the gamma function!\n","        \n","        Conditions on the parameters are alpha > 0 and beta > 0.\n","        \n","        The probability distribution function is:\n","        \n","                    x ** (alpha - 1) * math.exp(-x / beta)\n","          pdf(x) =  --------------------------------------\n","                      math.gamma(alpha) * beta ** alpha\n","    \n","    gauss(mu, sigma) method of Random instance\n","        Gaussian distribution.\n","        \n","        mu is the mean, and sigma is the standard deviation.  This is\n","        slightly faster than the normalvariate() function.\n","        \n","        Not thread-safe without a lock around calls.\n","    \n","    getrandbits(...) method of Random instance\n","        getrandbits(k) -> x.  Generates an int with k random bits.\n","    \n","    getstate() method of Random instance\n","        Return internal state; can be passed to setstate() later.\n","    \n","    lognormvariate(mu, sigma) method of Random instance\n","        Log normal distribution.\n","        \n","        If you take the natural logarithm of this distribution, you'll get a\n","        normal distribution with mean mu and standard deviation sigma.\n","        mu can have any value, and sigma must be greater than zero.\n","    \n","    normalvariate(mu, sigma) method of Random instance\n","        Normal distribution.\n","        \n","        mu is the mean, and sigma is the standard deviation.\n","    \n","    paretovariate(alpha) method of Random instance\n","        Pareto distribution.  alpha is the shape parameter.\n","    \n","    randint(a, b) method of Random instance\n","        Return random integer in range [a, b], including both end points.\n","    \n","    random(...) method of Random instance\n","        random() -> x in the interval [0, 1).\n","    \n","    randrange(start, stop=None, step=1, _int=<class 'int'>) method of Random instance\n","        Choose a random item from range(start, stop[, step]).\n","        \n","        This fixes the problem with randint() which includes the\n","        endpoint; in Python this is usually not what you want.\n","    \n","    sample(population, k) method of Random instance\n","        Chooses k unique random elements from a population sequence or set.\n","        \n","        Returns a new list containing elements from the population while\n","        leaving the original population unchanged.  The resulting list is\n","        in selection order so that all sub-slices will also be valid random\n","        samples.  This allows raffle winners (the sample) to be partitioned\n","        into grand prize and second place winners (the subslices).\n","        \n","        Members of the population need not be hashable or unique.  If the\n","        population contains repeats, then each occurrence is a possible\n","        selection in the sample.\n","        \n","        To choose a sample in a range of integers, use range as an argument.\n","        This is especially fast and space efficient for sampling from a\n","        large population:   sample(range(10000000), 60)\n","    \n","    seed(a=None, version=2) method of Random instance\n","        Initialize internal state from hashable object.\n","        \n","        None or no argument seeds from current time or from an operating\n","        system specific randomness source if available.\n","        \n","        If *a* is an int, all bits are used.\n","        \n","        For version 2 (the default), all of the bits are used if *a* is a str,\n","        bytes, or bytearray.  For version 1 (provided for reproducing random\n","        sequences from older versions of Python), the algorithm for str and\n","        bytes generates a narrower range of seeds.\n","    \n","    setstate(state) method of Random instance\n","        Restore internal state from object returned by getstate().\n","    \n","    shuffle(x, random=None) method of Random instance\n","        Shuffle list x in place, and return None.\n","        \n","        Optional argument random is a 0-argument function returning a\n","        random float in [0.0, 1.0); if it is the default None, the\n","        standard random.random will be used.\n","    \n","    triangular(low=0.0, high=1.0, mode=None) method of Random instance\n","        Triangular distribution.\n","        \n","        Continuous distribution bounded by given lower and upper limits,\n","        and having a given mode value in-between.\n","        \n","        http://en.wikipedia.org/wiki/Triangular_distribution\n","    \n","    uniform(a, b) method of Random instance\n","        Get a random number in the range [a, b) or [a, b] depending on rounding.\n","    \n","    vonmisesvariate(mu, kappa) method of Random instance\n","        Circular data distribution.\n","        \n","        mu is the mean angle, expressed in radians between 0 and 2*pi, and\n","        kappa is the concentration parameter, which must be greater than or\n","        equal to zero.  If kappa is equal to zero, this distribution reduces\n","        to a uniform random angle over the range 0 to 2*pi.\n","    \n","    weibullvariate(alpha, beta) method of Random instance\n","        Weibull distribution.\n","        \n","        alpha is the scale parameter and beta is the shape parameter.\n","\n","DATA\n","    __all__ = ['Random', 'seed', 'random', 'uniform', 'randint', 'choice',...\n","\n","FILE\n","    /usr/lib/python3.6/random.py\n","\n","\n","help> quit()\n","No Python documentation found for 'quit()'.\n","Use help() to get the interactive help utility.\n","Use help(str) for help on the str class.\n","\n","help> \n","\n","You are now leaving help and returning to the Python interpreter.\n","If you want to ask for help on a particular object directly from the\n","interpreter, you can type \"help(object)\".  Executing \"help('string')\"\n","has the same effect as typing a particular string at the help> prompt.\n"],"name":"stdout"}]}]}